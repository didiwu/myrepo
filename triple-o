Create stack user
# useradd stack
# passwd stack
# echo "stack ALL=(root) NOPASSWD:ALL" > /etc/sudoers.d/stack
# chmod 0440 /etc/sudoers.d/stack

Update hosts file
# echo "172.16.0.10 undercloud.localdomain undercloud" >> /etc/hosts

Install the tripleoclient
# yum install -y https://repos.fedorapeople.org/repos/openstack/openstack-newton/rdo-release-newton-0.noarch.rpm
# yum install -y python-tripleoclient

Install undercloud
# su - stack
$ vi undercloud.conf
$ openstack undercloud install

Add DNS to undercloud network
$ . stackrc
$ neutron subnet-list
$ neutron subnet-update <network-id> --dns-nameserver 8.8.8.8

Get and upload images
$ . stackrc
$ export NODE_DIST=centos7
$ export USE_DELOREAN_TRUNK=1
$ export DELOREAN_TRUNK_REPO="http://buildlogs.centos.org/centos/7/cloud/x86_64/rdo-trunk-master-tripleo/"
$ export DELOREAN_REPO_FILE="delorean.repo"
$ mkdir images
$ cd images
$ openstack overcloud image build --all
$ openstack overcloud image upload

Enable fake_pxe driver on ironic
$ sudo vi /etc/ironic/ironic.conf
enabled_drivers = pxe_ipmitool,pxe_ssh,pxe_drac,pxe_ilo,pxe_wol,pxe_amt,fake_pxe
$ sudo systemctl restart openstack-ironic-conductor.service

Register overcloud nodes
$ vi instackenv.json
$ openstack baremetal import --json instackenv.json
$ openstack baremetal configure boot

Inspect all nodes
$ openstack baremetal introspection bulk start
Bounce each overcloud node to start the instrospection process.

Inspect single node
$ ironic node-set-provision-state <uuid> manage
$ openstack baremetal introspection start <uuid>
$ openstack baremetal introspection status <uuid>
$ ironic node-set-provision-state <uuid> provide

Create nova flavors
$ openstack flavor delete control
$ openstack flavor delete compute
$ openstack flavor delete ceph-storage
$ openstack flavor create --id auto --ram 8192 --disk 79 --vcpus 4 --swap 2048 control
$ openstack flavor create --id auto --ram 8192 --disk 79 --vcpus 4 --swap 2048 compute
$ openstack flavor create --id auto --ram 8192 --disk 79 --vcpus 4 --swap 2048 ceph-storage
$ openstack flavor set --property "cpu_arch"="x86_64" --property "capabilities:boot_option"="local" --property "capabilities:profile"="control" control
$ openstack flavor set --property "cpu_arch"="x86_64" --property "capabilities:boot_option"="local" --property "capabilities:profile"="compute" compute
$ openstack flavor set --property "cpu_arch"="x86_64" --property "capabilities:boot_option"="local" --property "capabilities:profile"="ceph-storage" ceph-storage

Update overcloud nodes profile
$ ironic node-update <node-uuid> add properties/capabilities='profile:control,boot_option:local'
$ ironic node-update <node-uuid> add properties/capabilities='profile:compute,boot_option:local'
$ ironic node-update <node-uuid> add properties/capabilities='profile:ceph-storage,boot_option:local'

Build the overcloud
$ mkdir templates
$ vi templates/network-environment.yaml
$ mkdir templates/nic-configs
$ cp /usr/share/openstack-tripleo-heat-templates/network/config/bond-with-vlans/* templates/nic-configs/
$ cp ./templates/nic-configs/controller.yaml ./templates/nic-configs/controller.yaml.orig
$ vi templates/nic-configs/controller.yaml
$ mkdir templates/firstboot
$ vi templates/firstboot/firstboot.yaml
$ vi templates/firstboot/userdata.yaml

Deploy the overcloud
With 1 controller and 2 compute nodes
$ openstack overcloud deploy --templates /usr/share/openstack-tripleo-heat-templates --control-scale 1 --compute-scale 2 --neutron-tunnel-types vxlan --neutron-network-type vxlan --control-flavor control --compute-flavor compute -e /usr/share/openstack-tripleo-heat-templates/environments/network-isolation.yaml -e ~/templates/network-environment.yaml -e ~/templates/firstboot/firstboot.yaml

With 3 controllers
$ openstack overcloud deploy --templates /usr/share/openstack-tripleo-heat-templates --control-scale 3 -e /usr/share/openstack-tripleo-heat-templates/environments/puppet-pacemaker.yaml --compute-scale 2 --neutron-tunnel-types vxlan --neutron-network-type vxlan --control-flavor control --compute-flavor compute --ntp-server pool.ntp.org -e /usr/share/openstack-tripleo-heat-templates/environments/network-isolation.yaml -e ~/templates/network-environment.yaml -e ~/templates/firstboot/firstboot.yaml 

With 1 controller, 2 computes and 2 ceph nodes
$ openstack overcloud deploy --templates /usr/share/openstack-tripleo-heat-templates --control-scale 1 --compute-scale 2 --ceph-storage-scale 2 --neutron-tunnel-types vxlan --neutron-network-type vxlan --control-flavor control --compute-flavor compute --ceph-storage-flavor ceph-storage -e /usr/share/openstack-tripleo-heat-templates/environments/network-isolation.yaml -e ~/templates/network-environment.yaml -e ~/templates/storage-environment.yaml -e ~/templates/firstboot/firstboot.yaml

$ nova list
$ ironic node-list
Once the "Provisioning State" is in "wait call-back" state, bounce all the overcloud nodes. 
After that the provisioning state will change to "Deploying".
Once the provisioning state change to "Active", bounce all the overcloud nodes again.





